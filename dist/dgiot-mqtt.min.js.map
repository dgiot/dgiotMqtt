{"version":3,"file":"dgiot-mqtt.min.js","sources":["../package/index.js"],"sourcesContent":["const utils = require('../utils/index.js');\nconst dgiotBus = require('@dgiot/dgiotbus');\nconst iotMqtt = require('../utils/iotMqtt');\nconst store = require('../store/index.js');\nconst moment = require('moment');\nconst { Map2Json, getMqttEventId } = utils;\nconst reconnect = true;\nconst maxReconnectNum = 100;\n// https://blog.csdn.net/qq_30849965/article/details/109109914\n// https://unpkg.com/browse/xhl-mqttx@1.0.2/readme.md\nconsole.log('dgiotBus', dgiotBus);\nconsole.log('dgiot_mqtt');\nconst dgiotmqtt = {\n  name: 'dgiotmqtt',\n  data() {\n    return {\n      consoleTale: [],\n      reconnectNum: 0,\n      isReconnect: reconnect,\n      maxReconnectNum: maxReconnectNum,\n      MapTopic: new Map(),\n    };\n  },\n  computed: {\n    mapTopic() {\n      return store.getters['mqtt/mapTopic'];\n    },\n  },\n  created() {\n    const _this = this;\n    dgiotBus.$off(`${getMqttEventId('subscribe')}`);\n    dgiotBus.$on(`${getMqttEventId('subscribe')}`, (arg, qos = 0) => {\n      console.groupCollapsed(\n        '%ciotMqtt subscribe arg',\n        'color:#009a61; font-size: 28px; font-weight: 300'\n      );\n      console.table(arg);\n      console.groupEnd();\n      _this.subscribe(arg, qos);\n    });\n  },\n  mounted() {},\n  methods: {\n    connectCheckTopic(map) {\n      // const map = Map2Json(this.mapTopic)\n      for (let topickey in map) {\n        if (map[topickey].endtime > Number(moment().format('x')))\n          this.subscribe({\n            topickey: topickey,\n            topic: map[topickey].topic,\n            ttl: map[topickey].endtime - Number(moment().format('x')),\n          });\n        else this.unsubscribe(topickey, map[topickey].topic);\n      }\n    },\n    /**\n     *\n     * @param topic\n     * @param payloadString\n     * @return {Vue|*}\n     */\n    busSendMsg(topic, payloadString, Message) {\n      const nowTime = Number(moment().format('x'));\n      const map = Map2Json(this.mapTopic);\n      for (let topicKey in map) {\n        if (this.checkTopic(map[topicKey].topic, topic)) {\n          const args = {\n            topic: topic,\n            msg: payloadString,\n            Message: Message,\n            timestamp: moment().format('x'),\n          };\n          dgiotBus.$emit(`${topicKey}`, args);\n          console.groupCollapsed(\n            '%ciotMqtt SendMsg payloadString',\n            'color:#009a61; font-size: 28px; font-weight: 300'\n          );\n          console.groupEnd();\n          console.table({ topic, topicKey, args });\n        }\n        if (Number(map[topicKey].endtime) < nowTime)\n          this.unsubscribe(map[topicKey].topic, topicKey);\n      }\n      console.groupCollapsed(\n        '%ciotMqtt busSendMsg payloadString',\n        'color:#009a61; font-size: 28px; font-weight: 300'\n      );\n      console.warn('%c%s', 'font-size: 24px;', payloadString);\n      console.groupEnd();\n    },\n    /**\n     *\n     * @param subTopic 订阅的topic  包含#和+ 通配符\n     * @param pubTopic 发布的topic 一定不包含通配符\n     * @return {boolean}\n     */\n    checkTopic(subTopic, pubTopic) {\n      let length = pubTopic.length < subTopic.length ? pubTopic : subTopic; // 返回短的topic 短的topic 包含#/+\n      for (let k in length) {\n        if (subTopic[k] == '#' || subTopic == pubTopic) {\n          return true;\n        } else if (subTopic[k] == '+' || subTopic[k] == subTopic[k]) {\n          // return true\n        } else {\n          return false;\n        }\n      }\n    },\n    /**\n     *\n     * @param options\n     * @return {boolean}\n     */\n    initMqtt(options = {}) {\n      options = _.merge(options, {\n        time: moment(new Date()).format('YYYY-MM-DD HH:mm:ss.SSS'),\n      });\n      let _this = this;\n      if (_.isEmpty(options.id)) {\n        console.info(\n          '%c%s',\n          'color: green;font-size: 24px;',\n          'options 为空 不连接mqtt'\n        );\n        return false;\n      } else {\n        console.groupCollapsed(\n          '%ciotMqtt connect msg',\n          'color:#009a61; font-size: 28px; font-weight: 300'\n        );\n        console.table(options);\n        console.groupEnd();\n      }\n      iotMqtt.init({\n        id: options.id,\n        ip: options.ip,\n        port: options.port,\n        userName: options.userName,\n        passWord: options.passWord,\n        success: (msg = `clientId为${options.id},iotMqtt连接成功`) => {\n          _this.mqttSuccess(msg);\n          if (!_.isEmpty(_this.mapTopic))\n            _this.connectCheckTopic(Map2Json(this.mapTopic));\n        },\n        error: function (msg = `iotMqtt接失败,自动重连`) {\n          // _this.connectLost()\n          _this.mqttError(msg);\n        },\n        connectLost: function (msg = `iotMqtt连接丢失`) {\n          // _this.connectLost()\n          _this.mqttError(msg);\n        },\n        onMessage: function (Message) {\n          _this.onMessage(Message);\n        },\n      });\n    },\n    /**\n     *\n     * @param msg\n     */\n    mqttSuccess(msg = 'success') {\n      console.groupCollapsed(\n        '%ciotMqtt connection succeeded',\n        'color:#009a61; font-size: 28px; font-weight: 300'\n      );\n      console.info('%c%s', 'color: green;font-size: 24px;', msg);\n      console.groupEnd();\n      // iotMqtt.subscribe(this.objectId)\n      // this.subscribe(this.objectId)\n    },\n    /**\n     *\n     * @param msg\n     */\n    mqttError(msg = 'error') {\n      let _this = this;\n      console.groupCollapsed(\n        '%ciotMqtt Connection failed',\n        'color:#009a61; font-size: 28px; font-weight: 300'\n      );\n      console.error('%c%s', 'color: red;font-size: 24px;', msg);\n      console.groupEnd();\n      if (this.isReconnect) {\n        _this.reconnect();\n      } else console.info('reconnect 为' + reconnect, '不自動重連');\n    },\n    /**\n     *\n     * @param msg\n     */\n    connectLost(msg = 'connectLost') {\n      console.groupCollapsed(\n        '%ciotMqtt Connection lost',\n        'color:#009a61; font-size: 28px; font-weight: 300'\n      );\n      console.error('%c%s', 'color: red;font-size: 24px;', msg);\n      console.groupEnd();\n    },\n    /**\n     *\n     * @param Message\n     */\n    onMessage(Message) {\n      let _this = this;\n      const {\n        destinationName = 'destinationName',\n        duplicate = 'duplicate',\n        payloadBytes = 'payloadBytes',\n        payloadString = 'payloadString',\n        qos = 0,\n        retained = 'retained',\n      } = Message;\n      const table = {\n        destinationName: destinationName,\n        duplicate: duplicate,\n        payloadBytes: payloadBytes,\n        payloadString: payloadString,\n        qos: qos,\n        retained: retained,\n      };\n      _this.consoleTale.push(table);\n      console.groupCollapsed(\n        '%ciotMqtt onMessage',\n        'color:#009a61; font-size: 28px; font-weight: 300'\n      );\n      console.table(_this.consoleTale);\n      console.groupEnd();\n\n      this.busSendMsg(destinationName, payloadString, Message);\n    },\n    /**\n     *\n     * @param topickey\n     * @param topic\n     * @param ttl\n     */\n    subscribe: function (args, qos = 0) {\n      const { topicKey, topic, ttl } = args;\n      let _this = this;\n      let endTime = Number(moment().format('x')) + ttl;\n      _this.MapTopic.set(topicKey, { topic: topic, endtime: endTime });\n      // _this.setMapTopic(_this.MapTopic)\n      store.dispatch('mqttMsg/setMapTopic', _this.MapTopic);\n      if (!_.isEmpty(topic)) {\n        iotMqtt.subscribe(topic, qos);\n        console.groupCollapsed(\n          '%ciotMqtt subscribe',\n          'color:#009a61; font-size: 28px; font-weight: 300'\n        );\n        console.table(args);\n        console.groupEnd();\n      } else console.error('no topic');\n    },\n    /**\n     *\n     * @param topicKey 存储在vuex的key\n     * @param topic mqtt subscribe topic\n     */\n    unsubscribe: function (topicKey, topic) {\n      iotMqtt.unsubscribe(topic);\n      const map = this.mapTopic;\n      if (!_.isEmpty(map)) {\n        map.delete(topicKey);\n        // this.setMapTopic(map)\n        store.dispatch('mqttMsg/setMapTopic', map);\n      }\n      console.info('%c%s', 'color: green;font-size: 24px;', map);\n      console.groupCollapsed(\n        '%ciotMqtt unsubscribe',\n        'color:#009a61; font-size: 28px; font-weight: 300'\n      );\n      console.info(\n        '%c%s',\n        'color: green;font-size: 24px;',\n        'unsubscribe: topic' + topic\n      );\n      console.groupEnd();\n    },\n    /**\n     *\n     * @param msg\n     */\n    reconnect: function (msg = '自动重连mqtt') {\n      const _this = this;\n      _this.reconnectNum++;\n      const maxReconnectNum =\n        _this.maxReconnectNum < 4 ? 4 : _this.maxReconnectNum;\n      if (_this.reconnectNum < maxReconnectNum) {\n        iotMqtt.reconnect();\n        console.groupCollapsed(\n          '%ciotMqtt reconnect',\n          'color:#009a61; font-size: 28px; font-weight: 300'\n        );\n        console.log(\n          '%c%s',\n          'color: black; font-size: 24px;',\n          '当前重连次数：' + _this.reconnectNum + '次' + msg\n        );\n        console.groupEnd();\n      } else {\n        console.error(\n          '%c%s',\n          'color: black;font-size: 24px;',\n          '当前重连次数大于' +\n            maxReconnectNum +\n            '次,不再自动重连,重连第' +\n            _this.reconnectNum +\n            '次'\n        );\n      }\n    },\n    /**\n     *\n     * @param topic\n     * @param obj\n     */\n    sendMessage(topic, obj, qos = 0, retained = false) {\n      if (_.isEmpty(obj)) {\n        console.groupCollapsed(\n          '%csendMsg',\n          'color:#009a61; font-size: 28px; font-weight: 300'\n        );\n        console.error(topic, obj, '没有发送消息的内容');\n        console.groupEnd();\n        return;\n      }\n      // 数据发送\n      try {\n        iotMqtt.sendMessage(topic, obj, qos, retained);\n        console.groupCollapsed(\n          '%csendMsg',\n          'color:#009a61; font-size: 28px; font-weight: 300'\n        );\n        console.log(topic, obj);\n        console.groupEnd();\n      } catch (err) {\n        console.log('error', err);\n        console.groupCollapsed(\n          '%ciotMqtt sendMessage error',\n          'color:#009a61; font-size: 28px; font-weight: 300'\n        );\n        console.warn('%c%s', 'color: red;font-size: 24px;', err);\n        console.groupEnd();\n      }\n    },\n  },\n};\n\nwindow.dgiotmqtt = dgiotmqtt;\nexport default dgiotmqtt;\n"],"names":["utils","require","dgiotBus","iotMqtt","store","moment","Map2Json","getMqttEventId","reconnect","console","log","dgiotmqtt","name","data","consoleTale","reconnectNum","isReconnect","maxReconnectNum","MapTopic","Map","computed","mapTopic","getters","created","_this","this","$off","$on","arg","qos","groupCollapsed","table","groupEnd","subscribe","mounted","methods","connectCheckTopic","map","topickey","endtime","Number","format","topic","ttl","unsubscribe","busSendMsg","payloadString","Message","nowTime","topicKey","checkTopic","args","msg","timestamp","$emit","warn","subTopic","pubTopic","length","k","initMqtt","options","_","merge","time","Date","isEmpty","id","info","init","ip","port","userName","passWord","success","mqttSuccess","_this2","error","mqttError","connectLost","onMessage","destinationName","duplicate","payloadBytes","retained","push","endTime","set","dispatch","sendMessage","obj","err","window"],"mappings":"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"}